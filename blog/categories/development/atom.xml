<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Development | Kaffke.ws]]></title>
  <link href="http://kaffke.ws/blog/categories/development/atom.xml" rel="self"/>
  <link href="http://kaffke.ws/"/>
  <updated>2015-02-03T17:07:10+01:00</updated>
  <id>http://kaffke.ws/</id>
  <author>
    <name><![CDATA[Julian Kaffke]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running Octopress on CoreOS]]></title>
    <link href="http://kaffke.ws/blog/2015/02/03/running-octopress-on-coreos/"/>
    <updated>2015-02-03T15:30:47+01:00</updated>
    <id>http://kaffke.ws/blog/2015/02/03/running-octopress-on-coreos</id>
    <content type="html"><![CDATA[<p>In this post I will report my experiences and the challenges I had to fight regarding my first steps to CoreOS</p>

<p><em>CoreOS</em> is an operating system built to run <em>docker</em> containers with clustering and high availability in mind.</p>

<p>I will write a tutorial on setting up CoreOS clusters manually any time soon. For now I just assume you followed this <a href="https://coreos.com/docs/running-coreos/cloud-providers/ec2/">Guide</a> to have a 3 machine CoreOS Cluster on EC2.</p>

<h3>Let&rsquo;s start with the basics</h3>

<p>While you just by some clicks should have a running CoreOS cluster now, let&rsquo;s make sure you connect to it the right way:</p>

<p>You should check, if your ssh-agent has the right key
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-add -l</span></code></pre></td></tr></table></div></figure></p>

<p>This should output your key. If it doesn&rsquo;t, just add it by typing:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-add ~/.ssh/&lt;YOUR KEY></span></code></pre></td></tr></table></div></figure></p>

<p>and check again.</p>

<p>If everything is okay, then ssh into one of your instances via ssh
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh core@&lt;ip address></span></code></pre></td></tr></table></div></figure></p>

<p><blockquote><p>Note: To interact with your CoreOS node, you have to use the <code>core</code> user.</p></blockquote></p>

<p>Now you should be logged in. Yay!</p>

<h4>Listing your machines</h4>

<p>To list your machines in your cluster type:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ fleetctl list-machines</span></code></pre></td></tr></table></div></figure></p>

<p>Your output should look like this:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>core@ip-172-31-20-92 ~ $ fleetctl list-machines
</span><span class='line'>MACHINE   IP    METADATA
</span><span class='line'>23bd9809&hellip; 172.31.2.187  -
</span><span class='line'>3a27d588&hellip; 172.31.20.92  -
</span><span class='line'>b427ca07&hellip; 172.31.20.93  -</span></code></pre></td></tr></table></div></figure></p>

<p>In the first column you&rsquo;ll see the abbreviated form of the hash representing your machine</p>

<p>the second one is the IP of that machine</p>

<p>and the third one contains metadata (if present)</p>

<p>You&rsquo;ll probably be a little impatient, so we&rsquo;ll start now by running a docker container:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>core@ip-172-31-20-92 ~ $ sudo docker run -i -t ubuntu /bin/bash
</span><span class='line'>Unable to find image &lsquo;ubuntu&rsquo; locally
</span><span class='line'>Pulling repository ubuntu
</span><span class='line'>5ba9dab47459: Download complete
</span><span class='line'>511136ea3c5a: Download complete
</span><span class='line'>27d47432a69b: Download complete
</span><span class='line'>5f92234dcf1e: Download complete
</span><span class='line'>51a9c7c1f8bb: Download complete
</span><span class='line'>Status: Downloaded newer image for ubuntu:latest
</span><span class='line'>root@a2bb40cdaf38:/#</span></code></pre></td></tr></table></div></figure></p>

<p>Yay a command prompt of the newly created ubuntu container :-)</p>

<p>But that&rsquo;S definetly not the way you want to run docker containers on CoreOS.
Enter <em>systemd</em> and <em>fleet</em>.</p>

<h3>systemd</h3>
]]></content>
  </entry>
  
</feed>
